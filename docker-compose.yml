services:
  reverse-proxy:
    image: traefik:v3.2
    restart: unless-stopped
    container_name: traefik
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--log.level=INFO"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=reg.doroshenko@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/try-canada/letsencrypt:/letsencrypt
      - /etc/ssl/private/try-canada-ssl.key:/certs/try-canada-ssl.key
      - /etc/ssl/certs/try-canada-ssl.cer:/certs/try-canada-ssl.cer
      - ~/reverse-proxy:/config
      - /var/log/traefik/:/var/log/traefik/
      - /var/lib/try-canada/static/:/static/try-canada/
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.try-canada.org`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"
    networks:
      - traefik-net

  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - "~/reverse-proxy/default.conf:/etc/nginx/sites-available/default:ro"
      - "/var/lib/try-canada/static/:/usr/share/nginx/html/static/try-canada/"
      - "/var/lib/try-canada/media/:/usr/share/nginx/html/media/try-canada/"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static-try-canada.rule=Host(`www.try-canada.org`) && PathPrefix(`/static`)"
      - "traefik.http.services.static-try-canada.loadbalancer.server.port=80"
      - "traefik.http.routers.media-try-canada.rule=Host(`www.try-canada.org`) && PathPrefix(`/media`)"
      - "traefik.http.services.media-try-canada.loadbalancer.server.port=80"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=myresolver"

    networks:
      - traefik-net

networks:
  traefik-net:
    name: traefik-net
